# Generated by Django 3.1.7 on 2021-03-27 06:47

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Author',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=100, verbose_name='first name')),
                ('last_name', models.CharField(max_length=100, verbose_name='last name')),
                ('bio', models.TextField(blank=True, verbose_name='bio')),
                ('date_of_birth', models.DateField(blank=True, null=True, verbose_name='date of birth')),
                ('date_of_death', models.DateField(blank=True, null=True, verbose_name='date of death')),
            ],
            options={
                'ordering': ['last_name', 'first_name'],
            },
        ),
        migrations.CreateModel(
            name='Book',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100, verbose_name='title')),
                ('price', models.DecimalField(decimal_places=2, max_digits=6, verbose_name='price')),
                ('description', models.TextField(blank=True, verbose_name='description')),
                ('author', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='warehouse.author')),
            ],
            options={
                'ordering': ['title', 'author'],
            },
        ),
        migrations.CreateModel(
            name='Genre',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='name')),
            ],
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('book', models.CharField(max_length=100, verbose_name='title')),
                ('email', models.EmailField(max_length=254)),
                ('first_name', models.CharField(max_length=100, verbose_name='first name')),
                ('last_name', models.CharField(max_length=100, verbose_name='last name')),
                ('phone', models.CharField(max_length=100, verbose_name='phone number')),
                ('price', models.DecimalField(decimal_places=2, max_digits=8, verbose_name='price')),
                ('status', models.PositiveSmallIntegerField(blank=True, choices=[(1, 'in progress'), (2, 'is ready'), (3, 'completed')], default=1, help_text='Order status')),
            ],
        ),
        migrations.CreateModel(
            name='PublishingHouse',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='name')),
            ],
        ),
        migrations.CreateModel(
            name='BookInstance',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sold', models.BooleanField(default=False, verbose_name='sold')),
                ('book', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='warehouse.book')),
            ],
        ),
        migrations.AddField(
            model_name='book',
            name='genre',
            field=models.ManyToManyField(blank=True, to='warehouse.Genre', verbose_name='genre'),
        ),
        migrations.AddField(
            model_name='book',
            name='publishing_house',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='warehouse.publishinghouse'),
        ),
    ]
